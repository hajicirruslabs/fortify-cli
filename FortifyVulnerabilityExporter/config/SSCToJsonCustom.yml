# See FortifyVulnerabilityExporter documentation for SSC connection settings and application version selection

export:
  from: ssc
  to: json.custom   # You can use any name, as long as it starts with 'json' and there is a corresponding configuration entry

ssc:
  vulnerability:
    queryParam: analysis:exploitable     # Example to have SSC only return issues marked as Exploitable
    embed:                               # Load extra data, depending on what data you want to include in output
      - subEntity: details

export.dir: ${export.default.dir}      # Use default export directory (unless overridden)
json.custom:
  output:
    stdout: true                       # Useful for debugging, disable for optimal performance
    pretty: true                       # Useful for debugging, disable for optimal performance
    file:   ${export.dir}/${applicationVersion.project.name}-${applicationVersion.name}.json # Output file
  format:
    fields:
      hello: there
      vulnerabilitiesArray: $[vulnerabilityMappers.vulnerability.get()]     # Reference to vulnerabilityMapper defined below
      vulnerabilitiesById:  $[vulnerabilityMappers.vulnerabilityById.get()] # Reference to vulnerabilityMapper defined below
      explanationsById:     $[vulnerabilityMappers.explanationById.get()]   # Reference to vulnerabilityMapper defined below
    vulnerabilityMappers:
      vulnerability:
        fields:
          id: $[vuln.issueInstanceId]
          description: $[vuln.details?.detail]
          applicationVersion: $[applicationVersion.applicationAndVersionName]
      vulnerabilityById:
        propertyName: $[vuln.issueInstanceId]
        fields:
          id: $[vuln.instanceId]
          description: $[vuln.details?.detail]
          applicationVersion: $[applicationVersion.applicationAndVersionName]
      explanationById:
        propertyName: $[vuln.issueInstanceId]
        value: $[vuln.details?.detail]
      
    